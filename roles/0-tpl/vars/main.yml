---
#### general parameters
uninstall: false
user: "app_user"
group: "app_group"
skip_handlers: false
# define service state after deloy
# possible values: started, stopped, restarted, reloaded
# https://docs.ansible.com/ansible/latest/collections/ansible/builtin/systemd_service_module.html#parameter-state
service_state: started

systemd_name: demo1
systemd_short_name: d1
app_version: 3.5.1
urlpath: ""
archive_file: "demo1-{{app_version}}.tgz"
download_dest: "/tmp/{{archive_file}}"
# 通过此标记表明是否为单个可执行文件的部署，二进制部署方式通常部署都是压缩包，解压后会得到多个文件及目录
# 若为单文件部署，部署具体细节会有一些差异
single_exec_deploy: false

# 解压包后得到的单个目录名称，若解压后并非一个目录而是多个零散的文件，此值可以设置为空字符串
# 当single_exec_deploy为true时，此设置将忽略
unpacked_dirname: "demo1-{{app_version}}"

home: "/data/{{systemd_name}}/{{app_version}}"
home_subdirs: []
# - bin
# - var
# - etc
# 设置一个可执行文件的绝对路径，用于判断是否已经部署
exec_file: ""

# define ExecStart and ExecStop in systemd unit file
exec_start: "{{home}}/bin/demo1 -c config.yaml"
exec_stop: ""
# systemd restart policy
restart: "on-failure"

file_copies: []
# file_copies:
# - src: jmx_prometheus_javaagent-0.18.0.jar
#   dest: "{{home}}/bin/jmx_prometheus_javaagent-0.18.0.jar"

config_files:
- src: systemd.service
  dest: /etc/systemd/system/{{systemd_name}}.service
- src: "env"
  dest: "{{home}}/.env"
- src: config.yaml
  dest: "{{home}}/conf/config.yaml"