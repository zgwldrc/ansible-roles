---
#### general parameters
uninstall: false
user: "app_user"
group: "app_group"
skip_handlers: false
# define service state after deloy
# possible values: started, stopped, restarted, reloaded
# https://docs.ansible.com/ansible/latest/collections/ansible/builtin/systemd_service_module.html#parameter-state
service_state: started
systemd_name: rocketmq-broker
systemd_short_name: brk
namesrv_systemd_name: rocketmq-namesrv
namesrv_systemd_short_name: nam
version: 4.9.3
archive_file: "rocketmq-all-{{version}}-bin-release.zip"
unpacked_dirname: "rocketmq-all-{{version}}-bin-release"
urlpath: "https://archive.apache.org/dist/rocketmq/{{version}}/rocketmq-all-{{version}}-bin-release.zip"
# set single_exec_deploy true only when deploy single executable file , normaly we deploy a zip, tgz or tar.gz etc.
single_exec_deploy: false
download_dest: "/tmp/{{archive_file}}"
home: "/data/rocketmq/{{version}}"
home_subdirs: []
# - bin
# - var
# - etc
file_copies: []
exec_file: "{{home}}/bin/mqbroker"
# define ExecStart and ExecStop in systemd unit file
exec_start: "{{ home }}/bin/mqbroker -c {{ home }}/conf/broker.conf"
exec_stop: "{{ home }}/bin/mqshutdown broker"
namesrv_exec_start: "{{ home }}/bin/mqnamesrv"
namesrv_exec_stop: "{{ home }}/bin/mqshutdown namesrv"
# systemd restart policy
restart: "on-failure"
namesrv_restart: "on-failure"

#### extended parameters
java_home: "/data/jdk/11.0.10"

# common jmx prometheus java agent settings
jmx_prometheus_javaagent_version: 0.18.0
jmx_prometheus_javaagent_home: /data/jmx_prometheus_javaagent/{{jmx_prometheus_javaagent_version}}
jmx_prometheus_javaagent_bin: "{{jmx_prometheus_javaagent_home}}/bin/jmx_prometheus_javaagent-{{jmx_prometheus_javaagent_version}}.jar"

# broker jmx prometheus java agent settings
jmx_prometheus_javaagent_port: 9103
javaagent_opt: "{{jmx_prometheus_javaagent_bin}}={{jmx_prometheus_javaagent_port}}:{{jmx_prometheus_javaagent_home}}/conf/jmx_prometheus_javaagent_config.yaml"

# namesrv jmx prometheus java agent settings
namesrv_jmx_prometheus_javaagent_port: 9104
namesrv_javaagent_opt: "{{jmx_prometheus_javaagent_bin}}={{namesrv_jmx_prometheus_javaagent_port}}:{{jmx_prometheus_javaagent_home}}/conf/jmx_prometheus_javaagent_config.yaml"

# Memory
broker_xms: 2g
broker_xmx: 2g
broker_MaxDirectMemorySize: 1G
namesrv_xms: 256m
namesrv_xmx: 256m
namesrv_xmn: 128m

config_files:
- src: "env"
  dest: "{{home}}/.env"
- src: "logback_tools.xml"
  dest: "{{home}}/conf/logback_tools.xml"

broker_config_files:
- src: broker.service
  dest: /etc/systemd/system/{{systemd_name}}.service
- src: broker.conf
  dest: "{{home}}/conf/broker.conf"
- src: "runbroker.sh"
  dest: "{{home}}/bin/runbroker.sh"
- src: "logback_broker.xml"
  dest: "{{home}}/conf/logback_broker.xml"

namesrv_config_files:
- src: namesrv.service
  dest: /etc/systemd/system/{{namesrv_systemd_name}}.service
- src: "runserver.sh"
  dest: "{{home}}/bin/runserver.sh"
- src: "logback_namesrv.xml"
  dest: "{{home}}/conf/logback_namesrv.xml"

# broker.conf
# 指定整个broker集群的名称，或者说是RocketMQ集群的名称
brokerClusterName: "DefaultCluster"
# 指定删除消息存储过期文件的时间为凌晨4点
deleteWhen: "04;12;20"
# 指定刷盘策略为异步刷盘
# - ASYNC_FLUSH 异步刷盘
# - SYNC_FLUSH 同步刷盘
flushDiskType: "ASYNC_FLUSH"
# 指定Broker对外提供服务的端口，即Broker与producer与consumer通信的端口。默认 10911。
listenPort: 10911
haListenPort: 10912
# 新建Topic所创建的队列数
defaultTopicQueueNums: 16
# 是否允许 Broker 自动创建Topic，建议生产环境中关闭
autoCreateTopicEnable: false
# 是否允许 Broker 自动创建订阅组，建议生产环境中关闭
autoCreateSubscriptionGroup: true
# 指定未发生新的消息存储文件的保留时长x小时，x小时后过期，将会被删除
fileReservedTime: 48
# 指定commitLog目录中每个文件的大小，默认1G
mapedFileSizeCommitLog: 1073741824
# 指定ConsumeQueue的每个Topic的每个Queue文件中可以存放的消息数量，默认30w条
mapedFileSizeConsumeQueue: 300000
# 指定commitlog、consumequeue所在磁盘分区的最大使用，超过该值，则需立即清除过期文件
diskMaxUsedSpaceRatio: 80
# 在清除过期文件时，如果该文件被其他线程所占用（引用数大于0，比如读取消息），此时会阻止 此次删除任务，同时在第一次试图删除该文件时记录当前时间戳。
# 该属性则表示从第一次拒绝删除 后开始计时，该文件最多可以保留的时长。在此时间内若引用数仍不为0，则删除仍会被拒绝。不过 时间到后，文件将被强制删除 
# destroyMapedFileIntervalForcibly=120000

# 指定存储位置
storePathRootDir: "{{home}}/store"
# commitLog目录路径
storePathCommitLog: "{{home}}/store/commitlog"
# 消费队列存储路径存储路径
storePathConsumeQueue: "{{home}}/store/consumequeue"
# 消息索引存储路径
storePathIndex: "{{home}}/store/index"
# checkpoint 文件存储路径
storeCheckpoint: "{{home}}/store/checkpoint"
# abort 文件存储路径
abortFile: "{{home}}/store/abort"

# 指定消息的最大大小 默认4M 变量默认0时则配置文件中不配置此选项
maxMessageSize: 0
# 发消息线程池数量 变量默认0时则配置文件中不配置此选项
sendMessageThreadPoolNums: 0
# 拉消息线程池数量 变量默认0时则配置文件中不配置此选项
pullMessageThreadPoolNums: 0
# 是否使用可重入锁 变量默认false时则配置文件中不配置此选项
useReentrantLockWhenPutMessage: false
# 本地事务自查最大次数 变量默认0时则配置文件中不配置此选项
transactionCheckMax: 0
# 指定两次删除 commitLog 的间隔时间(ms)，这里默认0值则不会在配置文件中显式配置，从而让rocketmq使用内置默认值100ms
deleteCommitLogFilesInterval: 300
# 指定两次删除 ConsumeQueue 的间隔时间(ms), 这里默认0值则不会在配置文件中显式配置，从而让rocketmq使用内置默认值100ms
deleteConsumeQueueFilesInterval: 300