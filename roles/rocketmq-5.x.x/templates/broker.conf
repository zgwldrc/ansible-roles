# 指定整个broker集群的名称，或者说是RocketMQ集群的名称
brokerClusterName = {{brokerClusterName}}

# 指定master-slave集群的名称。一个RocketMQ集群可以包含多个master-slave集群
brokerName = {{brokerName}}
{% if enableControllerMode|lower == "false" %}
# 5.1版本启用控制器模式时此配置无效
brokerId = {{brokerId}}
# 5.1版本启用控制器模式时此配置无效
brokerRole = {{brokerRole}}
{% endif %}
# 指定Name Server的地址
namesrvAddr = {{ lookup('template', 'templates/namesrv.j2')|trim(';') }}
# 指定删除消息存储过期文件的时间为凌晨4点
deleteWhen = {{deleteWhen}}
# 指定未发生新的消息存储文件的保留时长为48小时，48小时后过期，将会被删除
fileReservedTime = {{fileReservedTime}}
# 指定刷盘策略为异步刷盘
# - ASYNC_FLUSH 异步刷盘 
# - SYNC_FLUSH 同步刷盘
flushDiskType = {{flushDiskType}}
# 指定Broker对外提供服务的端口，即Broker与producer与consumer通信的端口。默认 10911。
# 由于当前主机同时充当着master1与slave2，而前面的master1使用的是默认端口。这 里需要将这两个端口加以区分，以区分出master1与slave2 listenPort=11911
listenPort = {{listenPort}}
haListenPort = {{haListenPort}}

# 强制指定本机IP，需要根据每台机器进行修改。官方介绍可为空，系统默认自动识别，但多网卡 时IP地址可能读取错误 
# 设置broker节点所在服务器的ip地址（主从模式下，从节点会根据主节点的brokerIP2来同步数据，如果不配置，主从无法同步，brokerIP1设置为自己外网能访问的ip，
# 主节点需要配置ip1和ip2，从节点只需要配置ip1即可
brokerIP1 = {{ansible_default_ipv4.address}}
brokerIP2 = {{ansible_default_ipv4.address}}
##########################################################################################
##########################################################################################

# Controller 集群配置，https://rocketmq.apache.org/zh/docs/deploymentOperations/03autofailover
enableControllerMode = {{enableControllerMode|lower}}
controllerAddr = {{ lookup('template', 'templates/controllers.j2')|trim(';') }}
# 若该值为 true，则一条消息需要复制到 SyncStateSet 中的每一个副本才会向客户端返回成功，可以保证消息不丢失。默认为 false
allAckInSyncStateSet = {{allAckInSyncStateSet|lower}}
# 需保持同步的副本组数量，默认为1，allAckInSyncStateSet=true 时该参数无效
inSyncReplicas = {{inSyncReplicas}}
# 最小需保持同步的副本组数量，若 SyncStateSet 中副本个数小于 minInSyncReplicas 则 putMessage 直接返回 PutMessageStatus.IN_SYNC_REPLICAS_NOT_ENOUGH，默认为1。
minInSyncReplicas = {{minInSyncReplicas}}
# storePathEpochFile：存储 epoch 文件的位置。epoch 文件非常重要，不可以随意删���。默认在 store 目录下。
storePathEpochFile= {{storePathEpochFile}}
syncBrokerMetadataPeriod = {{syncBrokerMetadataPeriod}}
checkSyncStateSetPeriod = {{checkSyncStateSetPeriod}}
syncControllerMetadataPeriod = {{syncControllerMetadataPeriod}}
# syncBrokerMetadataPeriod：向 controller 同步 Broker 副本信息的时间间隔。默认 5000（5s）。
# checkSyncStateSetPeriod：检查 SyncStateSet 的时间间隔，检查 SyncStateSet 可能会 shrink SyncState。默认5000（5s）。
# syncControllerMetadataPeriod：同步 controller 元数据的时间间隔，主要是获取 active controller 的地址。默认10000（10s）。
# MaxTimeSlaveNotCatchup：表示 Slave 没有跟上 Master 的最大时间间隔，若在 SyncStateSet 中的 slave 超过该时间间隔会将其从 SyncStateSet 移除。默认为 15000（15s）。

# syncFromLastFile：若 slave 是空盘启动，是否从最后一个文件进行复制。默认为 false。
# asyncLearner：若该值为 true，则该副本不会进入 SyncStateSet，也就是不会被选举成 Master，而是一直作为一个 learner 副本进行异步复制。默认为false。
##########################################################################################
##########################################################################################

# 其他配置
#默认为新建Topic所创建的队列数
defaultTopicQueueNums = {{defaultTopicQueueNums}}
#是否允许 Broker 自动创建Topic，建议生产环境中关闭 
autoCreateTopicEnable = {{autoCreateTopicEnable|lower}}
#是否允许 Broker 自动创建订阅组，建议生产环境中关闭 
autoCreateSubscriptionGroup = {{autoCreateSubscriptionGroup|lower}}
#指定commitLog目录中每个文件的大小，默认1G 
mapedFileSizeCommitLog = {{mapedFileSizeCommitLog}}
#指定ConsumeQueue的每个Topic的每个Queue文件中可以存放的消息数量，默认30w条 
mapedFileSizeConsumeQueue = {{mapedFileSizeConsumeQueue}}
#在清除过期文件时，如果该文件被其他线程所占用（引用数大于0，比如读取消息），此时会阻止 此次删除任务，同时在第一次试图删除该文件时记录当前时间戳。
# 该属性则表示从第一次拒绝删除 后开始计时，该文件最多可以保留的时长。在此时间内若引用数仍不为0，则删除仍会被拒绝。不过 时间到后，文件将被强制删除 
destroyMapedFileIntervalForcibly = {{destroyMapedFileIntervalForcibly}}
#指定commitlog、consumequeue所在磁盘分区的最大使用率，超过该值，则需立即清除过期文件
diskMaxUsedSpaceRatio = {{diskMaxUsedSpaceRatio}}
#指定消息的最大大小 
maxMessageSize = {{maxMessageSize}}
#发消息线程池数量 
sendMessageThreadPoolNums = {{sendMessageThreadPoolNums}}
#拉消息线程池数量 
pullMessageThreadPoolNums = {{pullMessageThreadPoolNums}}
# 指定存储位置
storePathRootDir = {{storePathRootDir}}
# commitLog目录路径 
storePathCommitLog = {{storePathCommitLog}}