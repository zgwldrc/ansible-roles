# 需要卸载应用时，通过命令行传递这个变量
# ansible-playbook pb.yaml -e uninstall=true
uninstall: false
# 是否跳过handler执行，默认配置修改后会通知handler完成服务重启，
# 可以通过设置为True来跳过handler执行
skip_handlers: false
user: "app_user"
group: "app_group"

systemd_name: "kafka"
systemd_short_name: "kfk"
# define service state after deloy
# possible values: started, stopped, restarted, reloaded
# https://docs.ansible.com/ansible/latest/collections/ansible/builtin/systemd_service_module.html#parameter-state
service_state: started
systemd_name: kafka
systemd_short_name: kfk
zk_systemd_name: zookeeper
zk_systemd_short_name: zk
scala_version: 2.13
app_version: 3.5.1
archive_file: "kafka_{{scala_version}}-{{app_version}}.tgz"
unpacked_dirname: "kafka_{{scala_version}}-{{app_version}}"
urlpath: "https://archive.apache.org/dist/kafka/3.5.1/kafka_2.13-3.5.1.tgz"
single_exec_deploy: false
download_dest: "/tmp/{{archive_file}}"
home: "/data/{{systemd_name}}/{{scala_version}}-{{app_version}}"

# define ExecStart and ExecStop in systemd unit file
exec_start: "{{home}}/bin/kafka-server-start.sh {{home}}/config/server.properties"
exec_stop: ""
zk_exec_start: "{{home}}/bin/zookeeper-server-start.sh {{home}}/config/zookeeper.properties"
zk_exec_stop: ""
# systemd restart policy
restart: "on-failure"
zk_restart: "on-failure"

home_subdirs:
- tls
- logs
- config
- scripts

file_copies:
- src: jmx_prometheus_javaagent-{{jmx_prometheus_javaagent_version}}.jar
  dest: "{{home}}/bin/jmx_prometheus_javaagent-{{jmx_prometheus_javaagent_version}}.jar"

config_files: 
- src: "env"
  dest: "{{home}}/.env"       
- src: "zkenv"
  dest: "{{home}}/.zkenv"
java_home: ""

################################### global

### KrafeMode
kraft_mode: false
# whether use builtin zookeeper server
useEmbededZk: true

### JMX
jmx_enabled: true
jmx_system_properties:
- com.sun.management.jmxremote
- com.sun.management.jmxremote.authenticate=false
- com.sun.management.jmxremote.ssl=false
- java.rmi.server.hostname={{ansible_default_ipv4.address}}
jmx_port: 12345

### JMX Prometheus Java Agent
jmx_prometheus_javaagent_version: 0.18.0
jmx_prometheus_javaagent_home: /data/jmx_prometheus_javaagent/{{jmx_prometheus_javaagent_version}}
jmx_prometheus_javaagent_home_subdirs: ["conf", "bin"]
jmx_prometheus_javaagent_bin: "{{jmx_prometheus_javaagent_home}}/bin/jmx_prometheus_javaagent-{{jmx_prometheus_javaagent_version}}.jar"

jmx_prometheus_javaagent_port: 9103
javaagent_opt: "{{jmx_prometheus_javaagent_bin}}={{jmx_prometheus_javaagent_port}}:{{jmx_prometheus_javaagent_home}}/conf/jmx_prometheus_javaagent_config.yaml"

### tls settings
# if tls_enabled set to false, do not generate any tls relative stuffs
tls_enabled: false
# if set genkeystoreforce true, playbook will remove existing keystore before creating
genkeystoreforce: false
# signcert should be set to true only after ca setup
# we need ca private key to signing other certs
signcert: false

################################## server keystore settings
# define server keystore alias used in keytool command line
keystore_alias: "mykey"
# keystore validity in days
validity: 36500
# keystore password at least 6 chars length
storepass: "123456"
keystore_path: "{{home}}/tls/server.keystore.jks"
certreq_path: "{{home}}/tls/server.certreq"
## ca tls
ca_alias: "myca"
ca_common_name: "myca"
ca_storepass: "123456"
ca_keystore_path: "{{home}}/tls/ca.keystore.jks"
ca_cert_path: "{{home}}/tls/ca.cert"
## client tls
cli_truststore_path: "{{home}}/tls/client.truststore.jks"
cli_truststore_pass: "123456"

################################## kafka server.properties settings

# kafka common configs in all nodes, host specific configs defines in defaults
# do not change the length of uuid
kraft_cluter_uuid: PWbKe2u_SVqtorJpngRNqS
reformat_store: false
kafkaLogDir: "{{home}}/kafka-logs"
inter_broker_listener_name: "PLAINTEXT"
listener_security_protocol_map:
  PLAINTEXT: PLAINTEXT
  SSL: SSL
  SASL_PLAINTEXT: SASL_PLAINTEXT
  SASL_SSL: SASL_SSL
  CONTROLLER: PLAINTEXT

sasl_mechanism_inter_broker_protocol: "PLAIN"
sasl_enabled_mechanisms: "GSSAPI,PLAIN"

kafka_heap_opts: "-Xmx1G -Xms1G"
num_network_threads: 3
num_io_threads: 8
socket_send_buffer_bytes: 102400
socket_receive_buffer_bytes: 102400
socket_request_max_bytes: 104857600
num_recovery_threads_per_data_dir: 1
auto_create_topics_enable: true
transaction_state_log_replication_factor: 0    # when set to 0, means default to number of nodes
transaction_state_log_min_isr: 1
default_replication_factor: 0                  # when set to 0, means default to number of nodes
offsets_topic_replication_factor: 0            # when set to 0, means default to number of nodes
log_retention_hours: 48
log_retention_bytes: 0
max_message_bytes: 6291528

# Kraft Mode Only
controller_port: 9098
controller_listener_names:
- CONTROLLER

################################## zookeeper server settings
# zookeeper.properties
zkDataDir: "{{home}}/zkDataDir"
zkDataLogDir: "{{home}}/zkDataLogDir"
zk_heap_opts: "-Xmx512m -Xms512m"
zk_admin_enableServer: false
zk_jmx_port: 22345

############################### SASL
# use sasl plain authentication mechanism
_sasl_plain_enabled: false
_sasl_plain_listener_name: "SASL_PLAINTEXT"
_sasl_plain_username: admin
_sasl_plain_password: admin
_sasl_plain_users:
  admin: admin
  user1: user1
