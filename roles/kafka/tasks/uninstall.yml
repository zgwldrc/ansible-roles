---
- name: stop service
  systemd:
    name: "{{systemd_name}}"
    state: stopped

- name: stop zookeeper
  when: 
  - useEmbededZk
  systemd:
    name: "{{zk_systemd_name}}"
    state: stopped

- name: remove home dir
  file:
    path: "{{home}}"
    state: absent

- name: remove systemd unit file
  file:
    path: "/etc/systemd/system/{{systemd_name}}.service"
    state: absent

- name: remove zk systemd unit file
  when:
  - useEmbededZk
  file:
    path: "/etc/systemd/system/{{zk_systemd_name}}.service"
    state: absent

- name: remove service control shortcuts commands
  blockinfile:
    path: "/home/{{user}}/.bashrc"
    marker: "# {{item.long}} svcctl {mark} ANSIBLE MANAGED BLOCK"
    block: |
      alias {{item.short}}status='sudo systemctl status {{item.long}}.service'
      alias {{item.short}}start='sudo systemctl start {{item.long}}.service'
      alias {{item.short}}stop='sudo systemctl stop {{item.long}}.service'
      alias {{item.short}}restart='sudo systemctl restart {{item.long}}.service'
      alias {{item.short}}log='journalctl -u {{item.long}}.service -f -n 200 -o cat'
    create: true
    owner: "{{user}}"
    group: "{{group}}"
    state: absent
  loop:
  - {"short": "kfk", "long": "kafka"}
  - {"short": "zk", "long": "zookeeper"}

# remove kafka shortcuts
- name: remove kafka shortcuts in bashrc
  blockinfile:
    path: "/home/{{user}}/.bashrc"
    create: true
    marker: "# kafka_shortcuts {mark} ANSIBLE MANAGED BLOCK"
    owner: "{{user}}"
    group: "{{group}}"
    state: absent
    block: |
      export BS="{% for host in ansible_play_hosts %}{{hostvars[host]['ansible_default_ipv4']['address']}}:9092{% if not loop.last %},{% endif %}{% endfor +%}"
      alias kafka-acls="{{home}}/bin/kafka-acls.sh --bootstrap-server $BS"
      alias kafka-broker-api-versions="{{home}}/bin/kafka-broker-api-versions.sh --bootstrap-server $BS"
      alias kafka-configs="{{home}}/bin/kafka-configs.sh --bootstrap-server $BS"
      alias kafka-console-consumer="{{home}}/bin/kafka-console-consumer.sh --bootstrap-server $BS"
      alias kafka-console-producer="{{home}}/bin/kafka-console-producer.sh --bootstrap-server $BS"
      alias kafka-consumer-groups="{{home}}/bin/kafka-consumer-groups.sh --bootstrap-server $BS"
      alias kafka-consumer-perf-test="{{home}}/bin/kafka-consumer-perf-test.sh --bootstrap-server $BS"
      alias kafka-delegation-tokens="{{home}}/bin/kafka-delegation-tokens.sh --bootstrap-server $BS"
      alias kafka-delete-records="{{home}}/bin/kafka-delete-records.sh --bootstrap-server $BS"
      alias kafka-dump-log="{{home}}/bin/kafka-dump-log.sh --bootstrap-server $BS"
      alias kafka-log-dirs="{{home}}/bin/kafka-log-dirs.sh --bootstrap-server $BS"
      alias kafka-mirror-maker="{{home}}/bin/kafka-mirror-maker.sh --bootstrap-server $BS"
      alias kafka-preferred-replica-election="{{home}}/bin/kafka-preferred-replica-election.sh --bootstrap-server $BS"
      alias kafka-producer-perf-test="{{home}}/bin/kafka-producer-perf-test.sh --bootstrap-server $BS"
      alias kafka-reassign-partitions="{{home}}/bin/kafka-reassign-partitions.sh --bootstrap-server $BS"
      alias kafka-replica-verification="{{home}}/bin/kafka-replica-verification.sh --bootstrap-server $BS"
      alias kafka-run-class="{{home}}/bin/kafka-run-class.sh --bootstrap-server $BS"
      alias kafka-server-start="{{home}}/bin/kafka-server-start.sh --bootstrap-server $BS"
      alias kafka-server-stop="{{home}}/bin/kafka-server-stop.sh --bootstrap-server $BS"
      alias kafka-streams-application-reset="{{home}}/bin/kafka-streams-application-reset.sh --bootstrap-server $BS"
      alias kafka-topics="{{home}}/bin/kafka-topics.sh --bootstrap-server $BS"
      alias kafka-verifiable-consumer="{{home}}/bin/kafka-verifiable-consumer.sh --bootstrap-server $BS"
      alias kafka-verifiable-producer="{{home}}/bin/kafka-verifiable-producer.sh --bootstrap-server $BS"      

- name: remove sudo rules
  blockinfile:
    path: "/etc/sudoers.d/{{user}}"
    create: true
    marker: "# {{item}} {mark} ANSIBLE MANAGED BLOCK"
    state: absent
    block: |
      {{user}} ALL=(root) NOPASSWD: /usr/bin/systemctl start {{item}}.service
      {{user}} ALL=(root) NOPASSWD: /usr/bin/systemctl stop {{item}}.service
      {{user}} ALL=(root) NOPASSWD: /usr/bin/systemctl restart {{item}}.service
      {{user}} ALL=(root) NOPASSWD: /usr/bin/systemctl status {{item}}.service
  loop:
    - "kafka"
    - "zookeeper"

- name: remove perftest scripts
  file:
    path: "/home/{{user}}/{{item}}"
    state: absent
  loop:
  - 1-topic-creation.sh
  - 2-perftest-consumer.sh
  - 3-perftest-producer.sh
  - 4-stop-perftest.sh
  - 5-consumer-clean.sh
  - 6-topic-clean.sh
  - 7-clean-files.sh
  - consumer.sh
  - producer.sh
  - topic-clean-core.sh
  - topic-creation-core.sh