---
- name: stop service
  systemd:
    name: "{{systemd_name}}"
    state: stopped
  ignore_errors: true

- name: stop zookeeper
  when: 
  - useEmbededZk
  systemd:
    name: "{{zk_systemd_name}}"
    state: stopped
  ignore_errors: true

- name: remove home dir
  file:
    path: "{{home}}"
    state: absent

- name: remove systemd unit file
  file:
    path: "/etc/systemd/system/{{systemd_name}}.service"
    state: absent

- name: remove zk systemd unit file
  when:
  - useEmbededZk
  file:
    path: "/etc/systemd/system/{{zk_systemd_name}}.service"
    state: absent

- name: remove service control shortcuts commands
  blockinfile:
    path: "/home/{{user}}/.bashrc"
    marker: "# {{item.long}} svcctl {mark} ANSIBLE MANAGED BLOCK"
    block: |
      alias {{item.short}}status='sudo systemctl status {{item.long}}.service'
      alias {{item.short}}start='sudo systemctl start {{item.long}}.service'
      alias {{item.short}}stop='sudo systemctl stop {{item.long}}.service'
      alias {{item.short}}restart='sudo systemctl restart {{item.long}}.service'
      alias {{item.short}}log='journalctl -u {{item.long}}.service -f -n 200 -o cat'
    create: true
    owner: "{{user}}"
    group: "{{group}}"
    state: absent
  loop:
  - {"short": "{{systemd_short_name}}", "long": "{{systemd_name}}"}

- name: remove {{zk_systemd_name}} service control shortcuts commands
  when:
  - useEmbededZk
  blockinfile:
    path: "/home/{{user}}/.bashrc"
    marker: "# {{item.long}} svcctl {mark} ANSIBLE MANAGED BLOCK"
    block: |
      alias {{item.short}}status='sudo systemctl status {{item.long}}.service'
      alias {{item.short}}start='sudo systemctl start {{item.long}}.service'
      alias {{item.short}}stop='sudo systemctl stop {{item.long}}.service'
      alias {{item.short}}restart='sudo systemctl restart {{item.long}}.service'
      alias {{item.short}}log='journalctl -u {{item.long}}.service -f -n 200 -o cat'
    create: true
    owner: "{{user}}"
    group: "{{group}}"
    state: absent
  loop:
  - {"short": "{{zk_systemd_short_name}}", "long": "{{zk_systemd_name}}"}

# remove kafka shortcuts
- name: remove kafka shortcuts in bashrc
  blockinfile:
    path: "/home/{{user}}/.bashrc"
    create: true
    marker: "# kafka_shortcuts {mark} ANSIBLE MANAGED BLOCK"
    owner: "{{user}}"
    group: "{{group}}"
    block: "{{lookup('template', 'templates/kafka_alias.j2')}}"
    state: absent   

- name: remove {{systemd_name}} sudo rules
  blockinfile:
    path: "/etc/sudoers.d/{{user}}"
    create: true
    marker: "# {{item}} {mark} ANSIBLE MANAGED BLOCK"
    state: absent
    block: |
      {{user}} ALL=(root) NOPASSWD: /usr/bin/systemctl start {{item}}.service
      {{user}} ALL=(root) NOPASSWD: /usr/bin/systemctl stop {{item}}.service
      {{user}} ALL=(root) NOPASSWD: /usr/bin/systemctl restart {{item}}.service
      {{user}} ALL=(root) NOPASSWD: /usr/bin/systemctl status {{item}}.service
  loop:
    - "{{systemd_name}}"

- name: remove {{zk_systemd_name}} sudo rules
  when:
  - useEmbededZk
  blockinfile:
    path: "/etc/sudoers.d/{{user}}"
    create: true
    marker: "# {{item}} {mark} ANSIBLE MANAGED BLOCK"
    state: absent
    block: |
      {{user}} ALL=(root) NOPASSWD: /usr/bin/systemctl start {{item}}.service
      {{user}} ALL=(root) NOPASSWD: /usr/bin/systemctl stop {{item}}.service
      {{user}} ALL=(root) NOPASSWD: /usr/bin/systemctl restart {{item}}.service
      {{user}} ALL=(root) NOPASSWD: /usr/bin/systemctl status {{item}}.service
  loop:
    - "{{zk_systemd_name}}"


- name: remove perftest scripts
  file:
    path: "/home/{{user}}/{{item}}"
    state: absent
  loop:
  - 1-topic-creation.sh
  - 2-perftest-consumer.sh
  - 3-perftest-producer.sh
  - 4-stop-perftest.sh
  - 5-consumer-clean.sh
  - 6-topic-clean.sh
  - 7-clean-files.sh
  - consumer.sh
  - producer.sh
  - topic-clean-core.sh
  - topic-creation-core.sh

- name: remove /tmp/kraft_cluster_uuid
  file:
    path: /tmp/kraft_cluster_uuid
    state: absent 