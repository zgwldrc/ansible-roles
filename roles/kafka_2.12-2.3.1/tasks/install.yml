---
- name: user create
  user:
    name: "{{user}}"
    state: present

- name: group create
  group:
    name: "{{group}}"
    state: present

- name: ensure home and relavtive dirs created
  file:
    path: "{{item}}"
    state: directory
    owner: "{{user}}"
    group: "{{group}}"
  loop:
    - "{{home}}"

- name: check if downloaded
  stat:
    path: "{{download_dest}}"
  register: downloaded

- name: "Download"
  when: not downloaded.stat.exists
  block:
  - name: download from ansible control node
    when: 
    - install_from_files
    copy:
      src: "{{archive_file}}"
      dest: "{{download_dest}}"

  - name: download from s3_url
    when: 
    - s3_url
    - not install_from_files
    shell: |
      aws s3 cp {{s3_url}} {{download_dest}}
  - name: download from urlpath
    when:
    - not s3_url
    - not install_from_files
    get_url:
      url: "{{urlpath}}"
      dest: "{{download_dest}}"


- name: check if deployed already
  stat:
    path: "{{home}}/bin"
  register: deployed

- name: "Deploy"
  when: not deployed.stat.exists
  block:
  - name: create temp dir
    tempfile:
      state: directory
    register: r_tempdir

  - name: unarchive
    unarchive:
      src: "{{download_dest}}"
      dest: "{{r_tempdir.path}}"
      remote_src: yes

  - name: sync to home dir
    synchronize:
      src: "{{r_tempdir.path}}/kafka_{{scala_version}}-{{version}}/"
      dest: "{{home}}/"
    delegate_to: "{{ inventory_hostname }}"

  - name: clean temp dir
    when: r_tempdir is defined
    file: 
      path: "{{r_tempdir.path}}"
      state: absent


- name: "Config"
  block:
  - name: "Systemd unit file generate"
    template:
      src: "{{item}}"
      dest: "/etc/systemd/system/{{item}}"
    loop:
    - "kafka.service"
    - "zookeeper.service"

  - name: Kafka Properties
    template:
      src: "server.properties"
      dest: "{{home}}/config/server.properties"
    notify:
    - restart kafka service

  - name: Zookeeper Properties
    template:
      src: "zookeeper.properties"
      dest: "{{home}}/config/zookeeper.properties"
    notify:
    - restart zookeeper service

  - name: Set Zookeeper myid
    template:
      src: "myid"
      dest: "{{zkDataDir}}/myid"
      
  - name: Environement File
    template:
      src: env
      dest: "{{home}}/.env"

  
- name: ensure home dir owner and group
  file:
    path: "{{home}}"
    state: directory
    owner: "{{user}}"
    group: "{{group}}"
    recurse: yes

- name: Service Start
  systemd:
    name: "{{item}}"
    state: started
    enabled: true
    daemon_reload: true
  loop:
  - "kafka"
  - "zookeeper"

- name: Sudo Rules and Bashrc Alias
  block:
  - name: add service control shortcuts commands
    blockinfile:
      path: "/home/{{user}}/.bashrc"
      marker: "# {{item}} {mark} ANSIBLE MANAGED BLOCK"
      block: |
        alias {{item}}status='sudo systemctl status {{item}}.service'
        alias {{item}}start='sudo systemctl start {{item}}.service'
        alias {{item}}stop='sudo systemctl stop {{item}}.service'
        alias {{item}}restart='sudo systemctl restart {{item}}.service'
        alias {{item}}log='journalctl -u {{item}}.service -f -n 200 -o cat'
      create: true
      owner: "{{user}}"
      group: "{{group}}"
    loop:
      - "kafka"
      - "zookeeper"

  - name: export BS in bashrc
    lineinfile:
      path: "/home/{{user}}/.bashrc"
      line: |
        export BS="{% for host in ansible_play_hosts %}{{hostvars[host]['ansible_default_ipv4']['address']}}:9092{% if not loop.last %},{% endif %}{% endfor +%}"
      owner: "{{user}}"
      group: "{{group}}"
  - name: kafka shortcuts in bashrc
    lineinfile:
      path: "/home/{{user}}/.bashrc"
      line: |
        alias {{item}}="{{home}}/bin/{{item}}.sh --bootstrap-server $BS"
      owner: "{{user}}"
      group: "{{group}}"
    loop:
    - "kafka-acls"
    - "kafka-broker-api-versions"
    - "kafka-configs"
    - "kafka-console-consumer"
    - "kafka-console-producer"
    - "kafka-consumer-groups"
    - "kafka-consumer-perf-test"
    - "kafka-delegation-tokens"
    - "kafka-delete-records"
    - "kafka-dump-log"
    - "kafka-log-dirs"
    - "kafka-mirror-maker"
    - "kafka-preferred-replica-election"
    - "kafka-producer-perf-test"
    - "kafka-reassign-partitions"
    - "kafka-replica-verification"
    - "kafka-run-class"
    - "kafka-server-start"
    - "kafka-server-stop"
    - "kafka-streams-application-reset"
    - "kafka-topics"
    - "kafka-verifiable-consumer"
    - "kafka-verifiable-producer"
  - name: add suduers file
    blockinfile:
      path: "/etc/sudoers.d/{{user}}"
      create: true
      marker: "# {{item}} {mark} ANSIBLE MANAGED BLOCK"
      block: |
        {{user}} ALL=(root) NOPASSWD: /usr/bin/systemctl start {{item}}.service
        {{user}} ALL=(root) NOPASSWD: /usr/bin/systemctl stop {{item}}.service
        {{user}} ALL=(root) NOPASSWD: /usr/bin/systemctl restart {{item}}.service
        {{user}} ALL=(root) NOPASSWD: /usr/bin/systemctl status {{item}}.service
    loop:
      - "kafka"
      - "zookeeper"
